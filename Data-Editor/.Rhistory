allVisits$year_four <- ifelse(allVisits$date < as.Date("2021-04-01"), NA,
ifelse(allVisits$date <= as.Date("2023-12-31"), allVisits$rate, NA))
allVisits$year_five <- ifelse(allVisits$date < as.Date("2022-04-01"), NA,
ifelse(allVisits$date <= as.Date("2024-12-31"),allVisits$rate, NA))
allVisits$visit_8 <- NA
## assign variable list
varList <- c("baseline","six_mon", "year_one","year_two",
"year_three","year_four","year_five")
## for varList as numeric
allVisits[varList] <- sapply(allVisits[varList], as.numeric)
## create total visits var
for(b in 1:NROW(allVisits)){
allVisits$visit_totals[b] <- sum(allVisits[b, varList], na.rm = T)
}
## ==================================================================
## ==================================================================
## DFP
dfp <- oxVisits
## rename project
dfp$project <- "DFP"
## filter visits <= march 2019
dfp <- subset(dfp, date <= as.Date("2019-03-01"))
## recode vars: total, rate, and phase
dfp$total <- 35
dfp$rate <- 2.92
dfp$phase <- ifelse(dfp$date <= as.Date("2018-02-28"), "recruitment", "maintenance")
dfp$count <- ifelse(dfp$phase == "recruitment", seq(from = 2.92, to = 40, by = 2.92), NA)
## set rates per visit
dfp$screen <- ifelse(dfp$phase == "recruitment", dfp$rate, NA)
dfp$base_1 <- ifelse(dfp$phase == "recruitment", dfp$rate, NA)
dfp$base_2 <- ifelse(dfp$phase == "recruitment", dfp$rate, NA)
dfp$month_1 <- ifelse(dfp$date < as.Date("2017-04-01"), NA,
ifelse(dfp$date <= as.Date("2018-04-01"), dfp$rate, NA))
dfp$month_2 <- ifelse(dfp$date < as.Date("2017-05-01"), NA,
ifelse(dfp$date <= as.Date("2018-05-01"), dfp$rate, NA))
dfp$month_6 <- ifelse(dfp$date < as.Date("2017-09-01"), NA,
ifelse(dfp$date <= as.Date("2018-09-01"), dfp$rate, NA))
dfp$month_10 <- ifelse(dfp$date < as.Date("2018-01-01"), NA,
ifelse(dfp$date <= as.Date("2019-01-01"), dfp$rate, NA))
dfp$month_12 <- ifelse(dfp$date < as.Date("2018-03-01"), NA,
ifelse(dfp$date <= as.Date("2019-03-01"), dfp$rate, NA))
##  dfp[,8:19]
## assign variable list
varListDFP <- c("screen", "base_1", "base_2", "month_1", "month_2",
"month_6", "month_10", "month_12")
## make variables numeric
dfp[varListDFP] <- sapply(dfp[varListDFP], as.numeric)
## create summary column
for(c in 1:NROW(dfp)){
dfp$visit_totals[c] <- sum(dfp[c, varListDFP], na.rm = T)
}
## recode DFP column names
recode_list <- c("project", "center", "month_year", "total", "rate",
"year", "month", "date","phase", "count",
"visit_1", "visit_2", "visit_3", "visit_4",
"visit_5", "visit_6","month_7", "visit_8",
"visit_totals")
# prepare allVisits df for DFP bind
colnames(allVisits) <- recode_list
colnames(dfp) <- recode_list
## rbind
allVisits <- rbind(allVisits, dfp)
epad <- allVisits %>% filter(., project == "EPAD")
## ==================================================================
## ==================================================================
## make tibble
allVisits <- tbl_df(allVisits)
# get distinct rates by project
dem.studies.rates.df <- allVisits %>% distinct(project, total, rate) %>% arrange(., project, rate)
## make table
make_xtable(mydata = dem.studies.rates.df,
title = "Linear Monthy Rates of Recruitment by Project",
rnames = F)
## reduce data to projects and running total
dfp.recruit <- dfp %>% filter(., phase == "recruitment")
dfp.total.plot <- ggplot(data = dfp.recruit, aes(x = as.POSIXct(date), y = count,
color = as.factor(total))) +
geom_line(size = 1.5) +
scale_y_continuous("", breaks = seq(from = 0, to = (max(dfp.recruit$count) + 5), by = 5)) +
scale_x_datetime(date_breaks = "1 months",
date_minor_breaks = "1 month",
date_labels = "%Y-%b") +
scale_color_brewer("Total n =", palette = "Paired") +
xlab(NULL) + ylab("Participants") +
ggtitle("Dementia Studies at Oxford: DFP",
subtitle = "Total recruitment") +
theme(legend.position = "none",
axis.text.x = element_text(size = 7),
plot.subtitle = element_text(face = "italic"))
#dfp.total.plot
# make cutoff df for phases
dfp.cutoff <- data.frame(
"date" = as.Date("2018-04-01")
)
# plot actual vs trend
dfp.visits.plot <- ggplot(data = dfp, aes(x = as.POSIXct(date), y = visit_totals,
group = as.factor(total),
color = as.factor(total))) +
geom_point() +
geom_line() +
geom_smooth(method = "lm", formula = y ~ splines::ns(x, 2)) +
scale_y_continuous("", breaks = seq(from = 0, to = max(dfp$visit_totals), by = 2)) +
scale_x_datetime(date_breaks = "2 months",
date_minor_breaks = "1 month",
date_labels = "%Y-%b") +
scale_color_brewer("Total n =", palette = "Dark2") +
xlab(NULL) + ylab("Participant Visits") +
ggtitle("Dementia Studies at Oxford: DFP",
subtitle = "Participant Visits: Actual vs. Trend") +
theme(legend.position = "none",
axis.text.x = element_text(size = 7),
plot.subtitle = element_text(face = "italic"))
#dfp.visits.plot
# knot ggplots
knot.ggplots(gg1 = dfp.total.plot, gg2 = dfp.visits.plot)
## chunky
epad.visits.plot <- ggplot(data = epad, aes(x = as.POSIXct(date), y = visit_totals,
group = as.factor(total),
color = as.factor(total))) +
geom_point() +
geom_line() +
scale_y_continuous("", breaks = seq(from = 0,
to = max(epad$visit_totals),
by = 2)) +
scale_x_datetime(date_breaks = "12 months",
date_minor_breaks = "1 month",
date_labels = "%Y-%b") +
scale_color_brewer("Total n =", palette = "Dark2") +
xlab(NULL) + ylab("Participant Visits") +
ggtitle("Dementia Studies Recruitment at Oxford: EPAD",
subtitle = "Visits per Month: Actual") +
theme(legend.position = "none",
axis.text.x = element_text(size = 7),
plot.subtitle = element_text(face = "italic"))
#epad.visits.plot
# creamy
epad.visits.plot.smooth <- ggplot(data = epad, aes(x = as.POSIXct(date),
y = visit_totals,
group = as.factor(total),
color = as.factor(total))) +
geom_smooth(method = "lm", formula = y ~ ns(x, 2), se = T) +
scale_y_continuous("", breaks = seq(from = 0,
to = max(epad$visit_totals), by = 2)) +
scale_x_datetime(date_breaks = "12 months",
date_minor_breaks = "1 month",
date_labels = "%Y-%b") +
scale_color_brewer("Total n =", palette = "Dark2") +
xlab(NULL) + ylab("Participant Visits") +
ggtitle("",
subtitle = "Visits per Month: Trend") +
theme(legend.position = "bottom",
axis.text.x = element_text(size = 7),
plot.subtitle = element_text(face = "italic"))
# epad.visits.plot.smooth
# knot in nottingham
knot.ggplots(gg1 = epad.visits.plot, gg2 = epad.visits.plot.smooth)
rm(list = ls())
source('~/Rstudio/epad_tdc_visit.R', echo=TRUE)
source('~/Rstudio/epad_tdc_visit.R', echo=TRUE)
oxVisits
epad.visits.plot.smooth <- ggplot(data = epad, aes(x = as.POSIXct(date),
y = visit_totals,
group = as.factor(total),
color = as.factor(total))) +
geom_smooth(method = "lm", formula = y ~ ns(x, 2), se = T) +
scale_y_continuous("", breaks = seq(from = 0,
to = max(epad$visit_totals), by = 2)) +
scale_x_datetime(date_breaks = "12 months",
date_minor_breaks = "1 month",
date_labels = "%Y-%b") +
scale_color_brewer("Total n =", palette = "Dark2") +
xlab(NULL) + ylab("Participant Visits") +
ggtitle("",
subtitle = "Visits per Month: Trend") +
theme(legend.position = "bottom",
axis.text.x = element_text(size = 7),
plot.subtitle = element_text(face = "italic"))
epad.visits.plot <- ggplot(data = oxVisits, aes(x = as.POSIXct(date), y = visit_totals,
group = as.factor(total),
color = as.factor(total))) +
geom_point() +
geom_line() +
scale_y_continuous("", breaks = seq(from = 0,
to = max(epad$visit_totals),
by = 2)) +
scale_x_datetime(date_breaks = "12 months",
date_minor_breaks = "1 month",
date_labels = "%Y-%b") +
scale_color_brewer("Total n =", palette = "Dark2") +
xlab(NULL) + ylab("Participant Visits") +
ggtitle("Dementia Studies Recruitment at Oxford: EPAD",
subtitle = "Visits per Month: Actual") +
theme(legend.position = "none",
axis.text.x = element_text(size = 7),
plot.subtitle = element_text(face = "italic"))
epad.visits.plot <- ggplot(data = oxVisits, aes(x = as.POSIXct(date), y = visit_totals,
group = as.factor(total),
color = as.factor(total))) +
geom_point() +
geom_line() +
scale_y_continuous("", breaks = seq(from = 0,
to = max(oxVisits$visit_totals),
by = 2)) +
scale_x_datetime(date_breaks = "12 months",
date_minor_breaks = "1 month",
date_labels = "%Y-%b") +
scale_color_brewer("Total n =", palette = "Dark2") +
xlab(NULL) + ylab("Participant Visits") +
ggtitle("Dementia Studies Recruitment at Oxford: EPAD",
subtitle = "Visits per Month: Actual") +
theme(legend.position = "none",
axis.text.x = element_text(size = 7),
plot.subtitle = element_text(face = "italic"))
epad.visits.plot.smooth <- ggplot(data = oxVisits, aes(x = as.POSIXct(date),
y = visit_totals,
group = as.factor(total),
color = as.factor(total))) +
geom_smooth(method = "lm", formula = y ~ ns(x, 2), se = T) +
scale_y_continuous("", breaks = seq(from = 0,
to = max(oxVisits$visit_totals), by = 2)) +
scale_x_datetime(date_breaks = "12 months",
date_minor_breaks = "1 month",
date_labels = "%Y-%b") +
scale_color_brewer("Total n =", palette = "Dark2") +
xlab(NULL) + ylab("Participant Visits") +
ggtitle("",
subtitle = "Visits per Month: Trend") +
theme(legend.position = "bottom",
axis.text.x = element_text(size = 7),
plot.subtitle = element_text(face = "italic"))
knot.ggplots(gg1 = epad.visits.plot, gg2 = epad.visits.plot.smooth)
oxVisits
epad.total.recruitment <- ggplot( data = oxVisits, aes(x = as.POSIXct(date), y = count,
group = as.factor(total),
color = as.factor(total))) +
geom_point() +
geom_line() +
scale_y_continuous("", breaks = seq(from = 0,
to = max(oxVisits$visit_totals),
by = 2)) +
scale_x_datetime(date_breaks = "12 months",
date_minor_breaks = "1 month",
date_labels = "%Y-%b") +
scale_color_brewer("Total n =", palette = "Dark2") +
xlab(NULL) + ylab("Participant Visits") +
ggtitle("Dementia Studies Recruitment at Oxford: EPAD",
subtitle = "Visits per Month: Actual") +
theme(legend.position = "none",
axis.text.x = element_text(size = 7),
plot.subtitle = element_text(face = "italic"))
epad.total.recruitment
head(oxVisits)
epad.total.recruitment <- ggplot( data = oxVisits, aes(x = as.POSIXct(date), y = count,
group = as.factor(total),
color = as.factor(total))) +
geom_point() +
geom_line() +
scale_y_continuous("", breaks = seq(from = 0,
to = max(oxVisits$count),
by = 2)) +
scale_x_datetime(date_breaks = "12 months",
date_minor_breaks = "1 month",
date_labels = "%Y-%b") +
scale_color_brewer("Total n =", palette = "Dark2") +
xlab(NULL) + ylab("Participant Visits") +
ggtitle("Dementia Studies Recruitment at Oxford: EPAD",
subtitle = "Total Recruitment: Actual") +
theme(legend.position = "none",
axis.text.x = element_text(size = 7),
plot.subtitle = element_text(face = "italic"))
epad.total.recruitment
oxVisits
epad.total.recruitment <- ggplot( data = oxVisits %>% filter(., count != "NA"), aes(x = as.POSIXct(date), y = count,
group = as.factor(total),
color = as.factor(total))) +
geom_point() +
geom_line() +
scale_y_continuous("", breaks = seq(from = 0,
to = max(oxVisits$count),
by = 2)) +
scale_x_datetime(date_breaks = "12 months",
date_minor_breaks = "1 month",
date_labels = "%Y-%b") +
scale_color_brewer("Total n =", palette = "Dark2") +
xlab(NULL) + ylab("Participant Visits") +
ggtitle("Dementia Studies Recruitment at Oxford: EPAD",
subtitle = "Total Recruitment: Actual") +
theme(legend.position = "none",
axis.text.x = element_text(size = 7),
plot.subtitle = element_text(face = "italic"))
epad.total.recruitment
ox_rec <- oxVisits %>% filter(., count != "NA")
epad.total.recruitment <- ggplot( data = ox_rec, aes(x = as.POSIXct(date), y = count,
group = as.factor(total),
color = as.factor(total))) +
geom_point() +
geom_line() +
scale_y_continuous("", breaks = seq(from = 0,
to = max(oxVisits$count),
by = 2)) +
scale_x_datetime(date_breaks = "12 months",
date_minor_breaks = "1 month",
date_labels = "%Y-%b") +
scale_color_brewer("Total n =", palette = "Dark2") +
xlab(NULL) + ylab("Participant Visits") +
ggtitle("Dementia Studies Recruitment at Oxford: EPAD",
subtitle = "Total Recruitment: Actual") +
theme(legend.position = "none",
axis.text.x = element_text(size = 7),
plot.subtitle = element_text(face = "italic"))
epad.total.recruitment
epad.total.recruitment <- ggplot( data = ox_rec, aes(x = as.POSIXct(date), y = count,
group = as.factor(total),
color = as.factor(total))) +
geom_point() +
geom_line() +
#scale_y_continuous("", breaks = seq(from = 0,
#                                    to = max(oxVisits$count),
#                                    by = 2)) +
scale_x_datetime(date_breaks = "12 months",
date_minor_breaks = "1 month",
date_labels = "%Y-%b") +
scale_color_brewer("Total n =", palette = "Dark2") +
xlab(NULL) + ylab("Participant Visits") +
ggtitle("Dementia Studies Recruitment at Oxford: EPAD",
subtitle = "Total Recruitment: Actual") +
theme(legend.position = "none",
axis.text.x = element_text(size = 7),
plot.subtitle = element_text(face = "italic"))
epad.total.recruitment
epad.total.recruitment <- ggplot( data = ox_rec, aes(x = as.POSIXct(date), y = count,
group = as.factor(total),
color = as.factor(total))) +
geom_point() +
geom_line() +
#scale_y_continuous("", breaks = seq(from = 0,
#                                    to = max(oxVisits$count),
#                                    by = 2)) +
scale_x_datetime(date_breaks = "12 months",
date_minor_breaks = "1 month",
date_labels = "%Y-%b") +
scale_color_brewer("Total n =", palette = "Dark2") +
xlab(NULL) + ylab("Participant Visits") +
ggtitle("EPAD: Oxford Recruitment",
subtitle = "Total: Linear Recruitment") +
theme(legend.position = "none",
axis.text.x = element_text(size = 7),
plot.subtitle = element_text(face = "italic"))
epad.total.recruitment
epad.visits.plot.smooth <- ggplot(data = oxVisits, aes(x = as.POSIXct(date),
y = visit_totals,
group = as.factor(total),
color = as.factor(total))) +
geom_smooth(method = "lm", formula = y ~ ns(x, 2), se = T) +
scale_y_continuous("", breaks = seq(from = 0,
to = max(oxVisits$visit_totals), by = 2)) +
scale_x_datetime(date_breaks = "12 months",
date_minor_breaks = "1 month",
date_labels = "%Y-%b") +
scale_color_brewer("", palette = "Dark2") +
xlab(NULL) + ylab("Participant Visits") +
ggtitle("",
subtitle = "Visits per Month: Trend") +
theme(legend.position = "bottom",
axis.text.x = element_text(size = 7),
plot.subtitle = element_text(face = "italic"))
epad.visits.plot.smooth
epad.visits.plot.smooth <- ggplot(data = oxVisits, aes(x = as.POSIXct(date),
y = visit_totals,
group = as.factor(total),
color = as.factor(total))) +
geom_smooth(method = "lm", formula = y ~ ns(x, 2), se = T) +
scale_y_continuous("", breaks = seq(from = 0,
to = max(oxVisits$visit_totals), by = 2)) +
scale_x_datetime(date_breaks = "12 months",
date_minor_breaks = "1 month",
date_labels = "%Y-%b") +
scale_color_brewer("", palette = "Dark2") +
xlab(NULL) + ylab("Participant Visits") +
ggtitle("EPAD: Oxford Recruitment",
subtitle = "Visits: Monthly Visits (Smooth)") +
theme(legend.position = "bottom",
axis.text.x = element_text(size = 7),
plot.subtitle = element_text(face = "italic"))
epad.visits.plot.smooth
epad.visits.plot.smooth <- ggplot(data = oxVisits, aes(x = as.POSIXct(date),
y = visit_totals,
group = as.factor(total),
color = as.factor(total))) +
geom_smooth(method = "lm", formula = y ~ ns(x, 2), se = T) +
scale_y_continuous("", breaks = seq(from = 0,
to = max(oxVisits$visit_totals), by = 2)) +
scale_x_datetime(date_breaks = "12 months",
date_minor_breaks = "1 month",
date_labels = "%Y-%b") +
scale_color_brewer("", palette = "Dark2") +
xlab(NULL) + ylab("Participant Visits") +
ggtitle("EPAD: Oxford Recruitment",
subtitle = "Visits: Monthly Visits (Smooth)") +
theme(legend.position = "none",
axis.text.x = element_text(size = 7),
plot.subtitle = element_text(face = "italic"))
epad.visits.plot.smooth
source('~/temp/epad_tdc_script.R', echo=TRUE)
source('~/temp/epad_tdc_script.R', echo=TRUE)
source('~/temp/epad_tdc_script.R', echo=TRUE)
source('~/temp/epad_tdc_script.R', echo=TRUE)
source('~/temp/epad_tdc_script.R', echo=TRUE)
source('~/temp/epad_tdc_script.R', echo=TRUE)
source('~/temp/epad_tdc_script.R', echo=TRUE)
source('~/temp/epad_tdc_script.R', echo=TRUE)
source('~/temp/epad_tdc_script.R', echo=TRUE)
locs
source('~/temp/epad_tdc_script.R', echo=TRUE)
source('~/temp/epad_tdc_script.R', echo=TRUE)
locs$name
source('~/temp/epad_tdc_script.R', echo=TRUE)
source('~/temp/epad_tdc_script.R', echo=TRUE)
source('~/temp/epad_tdc_script.R', echo=TRUE)
source('~/temp/epad_tdc_script.R', echo=TRUE)
source('~/temp/epad_tdc_script.R', echo=TRUE)
source('~/temp/epad_tdc_script.R', echo=TRUE)
source('~/temp/epad_tdc_script.R', echo=TRUE)
source('~/temp/epad_tdc_script.R', echo=TRUE)
source('~/temp/epad_tdc_script.R', echo=TRUE)
source('~/temp/epad_tdc_script.R', echo=TRUE)
source('~/temp/epad_tdc_script.R', echo=TRUE)
source('~/temp/epad_tdc_script.R', echo=TRUE)
source('~/temp/epad_tdc_script.R', echo=TRUE)
source('~/temp/epad_tdc_script.R', echo=TRUE)
source('~/temp/epad_tdc_script.R', echo=TRUE)
source('~/temp/epad_tdc_script.R', echo=TRUE)
source('~/temp/epad_tdc_script.R', echo=TRUE)
source('~/temp/epad_tdc_script.R', echo=TRUE)
source('~/temp/epad_tdc_script.R', echo=TRUE)
source('~/temp/epad_tdc_script.R', echo=TRUE)
source('~/temp/epad_tdc_script.R', echo=TRUE)
source('~/temp/epad_tdc_script.R', echo=TRUE)
source('~/temp/epad_tdc_script.R', echo=TRUE)
source('~/temp/epad_tdc_script.R', echo=TRUE)
source('~/temp/epad_tdc_script.R', echo=TRUE)
source('~/temp/epad_tdc_script.R', echo=TRUE)
source('~/temp/epad_tdc_script.R', echo=TRUE)
source('~/temp/epad_tdc_script.R', echo=TRUE)
source('~/temp/epad_tdc_script.R', echo=TRUE)
source('~/temp/epad_tdc_script.R', echo=TRUE)
source('~/temp/epad_tdc_script.R', echo=TRUE)
source('~/temp/epad_tdc_script.R', echo=TRUE)
source('~/temp/epad_tdc_script.R', echo=TRUE)
addAwesomeMarkers
source('~/temp/epad_tdc_script.R', echo=TRUE)
source('~/temp/epad_tdc_script.R', echo=TRUE)
source('~/temp/epad_tdc_script.R', echo=TRUE)
source('~/temp/epad_tdc_script.R', echo=TRUE)
source('~/temp/epad_tdc_script.R', echo=TRUE)
addAwesomeMarkers
verifyIconLibrary
source('~/temp/epad_tdc_script.R', echo=TRUE)
source('~/temp/epad_tdc_script.R', echo=TRUE)
source('~/temp/epad_tdc_script.R', echo=TRUE)
library(mapview)
mapshot(map, url = "epad_oxf_map.html", file = "epad_oxf_map.png")
source('~/.active-rstudio-document', echo=TRUE)
makePassword(n = 100)
makePassword(n = 10)
source('~/.active-rstudio-document', echo=TRUE)
makePassword(n = 10)
makePassword(n = 2)
makePassword(n = 100)
source('~/.active-rstudio-document', echo=TRUE)
makePassword(n = 100)
makePassword(n = 15)
source('~/Rstudio/scripts/makePassword.R', echo=TRUE)
makePassword(n = 16)
sample(0:9, 9, replace = T)
sample(0:9, 9, replace = T)
del = 3 2 2 9 4 2 3 0 7
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
ls()
rm(list=ls())
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
install.packages("shinksky", dependencies = T)
devtools::install_github("AnalytixWare/ShinySky")
source('~/.active-rstudio-document', echo=TRUE)
ls()
source("~/Github/Rutils/functions/shiny_maker.R")
ls()
navbarMaker(directory_name = "EPAD_TDC_Tool", dir_path = "~/Dropbox/Programming/R/R_Shiny/")
getwd()
file.edit("~/Dropbox/Programming/R/R_Shiny/EPAD_TDC_Tool/server.R")
file.edit("~/Dropbox/Programming/R/R_Shiny/EPAD_TDC_Tool/global.R")
shiny::runApp()
getwd()
getwd()
shiny::runApp()
setwd()
getwd()
setwd("~/Github/Rutils/shinyapps/Data-Editor/")
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
format(Sys.Date(),"%Y%m%d-%H%M%S")
format(Sys.time(),"%Y%m%d-%H%M%S")
runApp()
shiny::runApp()
shiny::runApp()
